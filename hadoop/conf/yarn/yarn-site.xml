{%- from 'hadoop/settings.sls' import hadoop with context %}
{%- from 'hadoop/hdfs/settings.sls' import hdfs with context %}
{%- from 'hadoop/mapred/settings.sls' import mapred with context %}
{%- from 'hadoop/yarn/settings.sls' import yarn with context %}
{%- set dyn_cfg = yarn.get('config_yarn_site', {}) %}
{%- set major = hadoop.major_version|string() -%}<?xml version="1.0"?>

{%- from 'zookeeper/settings.sls' import zk with context %}
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>
    <property>
        <name>yarn.resourcemanager.zk-address</name>
        <value>{{ zk.connection_string }}</value>
    </property>

    <property>
        <name>yarn.resourcemanager.cluster-id</name>
        <value>{{ yarn.cluster_id }}</value>
    </property>

    <property>
        <name>yarn.resourcemanager.ha.enabled</name>
        <value>true</value>
    </property>
    
    {% if hadoop.secure_mode %}
    <property>
        <name>yarn.resourcemanager.principal</name>
	<value>yarn/_HOST@{{ grains['cluster_id'] | upper}}</value>
    </property>
    <property>
        <name>yarn.resourcemanager.keytab</name>
	<value>/etc/krb5/yarn.keytab</value>
    </property>
    <property>
        <name>yarn.nodemanager.principal</name>
	<value>yarn/_HOST@{{ grains['cluster_id'] | upper}}</value>
    </property>
    <property>
        <name>yarn.nodemanager.keytab</name>
	<value>/etc/krb5/yarn.keytab</value>
    </property>
    <property>
        <name>yarn.web-proxy.principal</name>
	<value>wap/_HOST@{{ grains['cluster_id'] | upper}}</value>
    </property>
    <property>
        <name>yarn.web-proxy.keytab</name>
	<value>/etc/krb5/wap.keytab</value>
    </property>
    <property>
        <name>yarn.http.policy</name>
	<value>HTTPS_ONLY</value>
    </property>
    <property>
        <name>yarn.resourcemanager.proxy-user-privileges.enabled</name>
	<value>true</value>
    </property>
    <property>
  	<name>yarn.nodemanager.container-executor.class</name>
  	<value>org.apache.hadoop.yarn.server.nodemanager.LinuxContainerExecutor</value>
    </property>
    <property>
  	<name>yarn.nodemanager.linux-container-executor.group</name>
  	<value>hadoop</value>
    </property>
    {% endif %}

    <property>
        <name>yarn.resourcemanager.ha.rm-ids</name>
        <value>{% for rm in yarn.resourcemanager_hosts %}rm{{ loop.index }}{{ "," if not loop.last else "" }}{% endfor %}</value>
    </property>

    {% for rm in yarn.resourcemanager_hosts %}
    {%- if hadoop.secure_mode %}
    <property>
	<name>yarn.resourcemanager.webapp.https.address.rm{{ loop.index}}</name>
	<value>{{ rm }}:8090</value>
    </property>
    <property>
	<name>yarn.web-proxy.address.rm{{ loop.index}}</name>
        <value>{{ rm }}:{{ yarn.resourcemanager_webapp_port }}</value>
    </property>
    {% endif %}
    
    <property>
        <name>yarn.resourcemanager.hostname.rm{{ loop.index }}</name>
        <value>{{ rm }}</value>
    </property>

    <property>
        <name>yarn.resourcemanager.address.rm{{ loop.index }}</name>
	<value>{{ rm }}:{{ yarn.resourcemanager_port }}</value>
    </property>

    <property>
        <name>yarn.resourcemanager.scheduler.address.rm{{ loop.index }}</name>
        <value>{{ rm }}:{{ yarn.scheduler_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.resource-tracker.address.rm{{ loop.index }}</name>
        <value>{{ rm }}:{{ yarn.resourcetracker_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.admin.address.rm{{ loop.index }}</name>
        <value>{{ rm }}:{{ yarn.resourcemanager_admin_port }}</value>
    </property>
     
    <property>
        <name>yarn.resourcemanager.webapp.address.rm{{ loop.index }}</name>
        <value>{{ rm }}:{{ yarn.resourcemanager_webapp_port }}</value>
    </property>
    {% endfor %}

    <property>
        <name>yarn.nodemanager.address</name>
        <value>0.0.0.0:{{ yarn.nodemanager_port }}</value>
    </property>

    <property>
        <name>yarn.nodemanager.webapp.address</name>
        <value>0.0.0.0:{{ yarn.nodemanager_webapp_port }}</value>
    </property>

    <property>
        <name>yarn.nodemanager.localizer.address</name>
        <value>0.0.0.0:{{ yarn.nodemanager_localizer_port }}</value>
    </property>

    <property>
        <name>yarn.log.server.url</name>
        <value>http://{{ mapred.jobtracker_host }}:{{ mapred.jobhistory_webapp_port }}/jobhistory/logs/</value>
        <description>URL for job history server</description>
    </property>

    <property>
        <name>yarn.nodemanager.local-dirs</name>
        <value>{{ '/yarn/local,'.join(yarn.local_disks) }}/yarn/local</value>
   </property>

    <property>
        <name>yarn.nodemanager.log-dirs</name>
        <value>{{ yarn.first_local_disk }}/yarn/logs</value>
    </property>

{%- for name, subdict in dyn_cfg.items() %}
    <property>
        <name>{{ name }}</name>
{%- for k,v in subdict.items() %}
        <{{k}}>{{ v }}</{{k}}>
{%- endfor %}
    </property>

{%- endfor %}
</configuration>
