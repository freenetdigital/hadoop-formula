{%- from 'hadoop/ranger/settings.sls' import ranger with context -%}
{%- from 'hadoop/hdfs/settings.sls'   import hdfs   with context -%}
{%- from 'hadoop/hive/settings.sls'   import hive   with context -%}
{%- from 'hadoop/solr/settings.sls'   import solr   with context -%}
{%- from 'hadoop/hue/settings.sls'    import hue    with context -%}
{%- from 'zookeeper/settings.sls'     import zk     with context -%}
{%- from 'hadoop/settings.sls'        import hadoop with context -%}
{%- set hive_cfg = hive.get('config_hive_site', {}) %}
{%- set solr_target = 'G@role:solr and G@clustername:' + grains['cluster_id'] -%}
{%- set solr_grains = salt['mine.get'](solr_target, 'grains.item', tgt_type='compound') -%}
{%- set livy_target = 'G@role:livy and G@clustername:' + grains['cluster_id'] -%}
{%- set livy_grains = salt['mine.get'](livy_target, 'grains.item', tgt_type='compound') -%}
{%- if hadoop.secure_mode -%}
	{%- set protocol = 'https' -%}
	{%- set hdfs_port = 50470 %}
	{%- set yarn_port = 8090 %}
{%- else -%}
	{%- set protocol = 'http' -%}
	{%- set hdfs_port = 50070 %}
	{%- set yarn_port = 8088 %}
{%- endif -%}
# Hue configuration file
# ===================================
#
# For complete documentation about the contents of this file, run
#   $ <hue_root>/build/env/bin/hue config_help
#
# All .ini files under the current directory are treated equally.  Their
# contents are merged to form the Hue configuration, which can
# can be viewed on the Hue at
#   http://<hue_host>:<port>/dump_config


###########################################################################
# General configuration for core Desktop features (authentication, etc)
###########################################################################

[desktop]
  secret_key=NzmkUdcv5Np7p7matcjI
  http_host=0.0.0.0
  http_port=8888
  server_user=hue
  server_group=hue
  time_zone=Europe/Berlin
  default_user=hue
  default_hdfs_superuser=hdfs
  enable_server=yes
  cherrypy_server_threads=50
  collect_usage=false
  cluster_id='{{ grains['cluster_id']}}'
  audit_event_log_dir={{ hue.install_dir}}/hue/logs/audit_logs/audit.log
  {%- if hadoop.secure_mode %}
  ssl_certificate=/home/{{ username }}/ssl/{{ hadoop.cert_name}}
  ssl_private_key=/home/{{ username }}/ssl/{{ hadoop.cert_name}}.key
  secure_ssl_redirect=True
  app_blacklist=pig,oozie,hbase,
  {%- else %}

  ## ssl_certificate=
  ## ssl_private_key=
  ## secure_ssl_redirect=False
  {% endif %}

  ## Default Values
  ## secret_key_script=
  ##is_hue_4=true
  ##disable_hue_3=true
  ## hue_load_balancer=
  ##django_debug_mode=false
  ##dev=false
  ##dev_embedded=false
  ##database_logging=false
  ##send_dbug_messages=false
  ##http_500_debug_mode=false
  ##memory_profiler=false
  ##instrumentation=false
  ##is_embedded=false
  ## django_server_email='hue@localhost.localdomain'
  ## django_email_backend=django.core.mail.backends.smtp.EmailBackend
  ##use_cherrypy_server=true
  ## gunicorn_work_class=eventlet
  ## gunicorn_number_of_workers=None
  ## sasl_max_buffer=2097152
  ## default=false
  ## ssl_certificate_chain=
  ## ssl_password=
  ## ssl_password_script=
  ## secure_content_type_nosniff=true
  ## X-Xss-Protection: \"1; mode=block\" This is a HTTP response header feature to force XSS protection.
  ## secure_browser_xss_filter=true
  ## secure_content_security_policy="script-src 'self' 'unsafe-inline' 'unsafe-eval' *.google-analytics.com *.doubleclick.net data:;img-src 'self' *.google-analytics.com *.doubleclick.net http://*.tile.osm.org *.tile.osm.org *.gstatic.com data:;style-src 'self' 'unsafe-inline' fonts.googleapis.com;connect-src 'self';frame-src *;child-src 'self' data: *.vimeo.com;object-src 'none'"
  ## secure_redirect_host=0.0.0.0
  ## secure_redirect_exempt=[]
  ## secure_hsts_seconds=31536000
  ## secure_hsts_include_subdomains=true

  ## ssl_cipher_list=ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS:!DH:!ADH
  ## ssl_cacerts=/etc/hue/cacerts.pem
  ## ssl_validate=true
  ## auth_username=hue
  ## auth_password=
  ## default_site_encoding=utf-8
  ## leaflet_tile_layer=http://{s}.tile.osm.org/{z}/{x}/{y}.png
  ## leaflet_tile_layer_attribution='&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
  ## leaflet_map_options='{}'
  ## leaflet_tile_layer_options='{}'
  ## http_x_frame_options=SAMEORIGIN
  ## use_x_forwarded_host=true
  ## secure_proxy_ssl_header=false
  ## middleware=desktop.auth.backend.LdapSynchronizationBackend
  ## redirect_whitelist=^(\/[a-zA-Z0-9]+.*|\/)$
  ##use_new_editor=true
  ##enable_download=true
  ##enable_sql_syntax_check=true
  ## use_new_side_panels=false
  ## use_new_charts=false
  ## editor_autocomplete_timeout=30000
  ## use_default_configuration=false
  ## audit_log_max_file_size=100MB
  ## rest_conn_timeout=120
  ## log_redaction_file=
  ## allowed_hosts="*"
  ## enable_django_debug_tool=false
  ## django_debug_tool_users=
  ## rest_response_size=2000

  [[django_admins]]
    ## [[[admin1]]]
    ## name=john
    ## email=john@doe.com

   [[auth]]

    ## backend=desktop.auth.backend.AllowFirstUserDjangoBackend
    {%- if hadoop.secure_mode %}
    backend=desktop.auth.backend.LdapBackend
    {%- endif %}

    ## user_aug=desktop.auth.backend.DefaultUserAugmentor
    ## expire_superusers=true
    idle_session_timeout=-1
    ## login_failure_limit=3
    ## login_lock_out_at_failure=false
    ## login_cooloff_time=None
    ## login_lock_out_use_user_agent=false
    ## login_lock_out_by_combination_user_and_ip=false
    ## behind_reverse_proxy=false
    ## reverse_proxy_header=HTTP_X_FORWARDED_FOR

  [[ldap]]
    {%- if hadoop.secure_mode %}
    base_dn="{{ ranger.ldap_searchbase }}"
    ldap_url="ldaps://{{ ranger.ldap_host }}:{{ ranger.ldap_port }}"
    use_start_tls=true
    bind_dn="{{ranger.ldap_user}}"
    bind_password={{ ranger.ldap_pass }}
    ldap_username_pattern="{{ hue.ldap_username_pattern }}"
    search_bind_authentication=true
    {%- endif %}
    [[[users]]]
      {%- if hadoop.secure_mode %}
      user_filter={{ hue.ldap_user_filter }}
      user_name_attr=sAMAccountName
      {%- endif %}
    [[[groups]]]

  [[database]]
   {%- if hue.database_type == 'sqlite' %}
      name={{ hue.sqlite_path }}
      engine=sqlite
      name=desktop/desktop.db
      options={}
    {%- endif %}
    {%- if hue.database_type == 'mysql' %}
      name={{ hue.database_name }}
      engine=mysql
      host=localhost
      port=3306
      user=hue
      password={{ hue.database_password }}
      options={}
    {%- endif %}

  [[session]]
    cookie_name=sessionid
    ## 5 days = 432000
    ttl=432000
    {%- if hadoop.secure_mode %}
    secure=true{%- else %}
    secure=false{%- endif %}
    expire_at_browser_close=true
    concurrent_user_session_limit=0

  [[kerberos]]
    {%- if hadoop.secure_mode %}
    hue_keytab=/etc/krb5/hue.keytab
    hue_principal=hue/{{grains['fqdn']}}@{{grains['cluster_id'] | upper }}
    ccache_path=/var/run/hue/hue_krb5_ccache
    kinit_path=/usr/bin/kinit
    mutual_authentication="OPTIONAL" 
    {%- endif %}

  [[metrics]]
   enable_web_metrics=True
   collection_interval=30000


###########################################################################
# Settings to configure the snippets available in the Notebook
###########################################################################

[notebook]

  show_notebooks=true
  enable_external_statements=true
  enable_batch_execute=true
  enable_sql_indexer=false
  enable_presentation=true
  enable_query_builder=true
  # enable_query_scheduling=false
  # enable_dbproxy_server=true
  # dbproxy_extra_classpath=

  [[interpreters]]
    [[[hive]]]
      name=Hive
      interface=hiveserver2

    [[[impala]]]
      name=Impala
      interface=hiveserver2

    [[[spark]]]
      name=Scala
      interface=livy

    [[[pyspark]]]
      name=PySpark
      interface=livy

    [[[r]]]
      name=R
      interface=livy

    [[[jar]]]
      name=Spark Submit Jar
      interface=livy-batch

    [[[py]]]
      name=Spark Submit Python
      interface=livy-batch

    [[[text]]]
      name=Text
      interface=text

    [[[markdown]]]
      name=Markdown
      interface=text

    [[[mysql]]]
      name = MySQL
      interface=rdbms

    [[[sqlite]]]
      name = SQLite
      interface=rdbms

    [[[postgresql]]]
      name = PostgreSQL
      interface=rdbms

    [[[oracle]]]
      name = Oracle
      interface=rdbms

    [[[solr]]]
      name = Solr SQL
      interface=solr
      ## Name of the collection handler
      # options='{"collection": "default"}'

    [[[pig]]]
      name=Pig
      interface=oozie

    [[[java]]]
      name=Java
      interface=oozie

    [[[spark2]]]
      name=Spark
      interface=oozie

    [[[mapreduce]]]
      name=MapReduce
      interface=oozie

    [[[sqoop1]]]
      name=Sqoop1
      interface=oozie

    [[[distcp]]]
      name=Distcp
      interface=oozie

    [[[shell]]]
      name=Shell
      interface=oozie

###########################################################################
# Settings to configure your Analytics Dashboards
###########################################################################

[dashboard]
  is_enabled=true
  ## has_sql_enabled=false
  ## has_query_builder_enabled=false
  ## has_report_enabled=false
  ## use_gridster=true
  ## has_widget_filter=false
  ## has_tree_widget=false

  [[engines]]

    {%- if solr_grains.items()| length > 0 %}
    [[[solr]]]
      analytics=true
      nesting=false
    {%- endif %}

###########################################################################
# Settings to configure your Hadoop cluster.
###########################################################################

[hadoop]
  [[hdfs_clusters]]
    [[[default]]]
      {%- if hdfs.namenode_count > 1 %}
      fs_defaultfs=hdfs://{{hdfs.namenode_hosts | first() }}:8020
      {%- endif %}
      {%- if hdfs.namenode_count == 1 %}
      fs_defaultfs=hdfs://{{hdfs.namenode}}:8020
      {%- endif %}
      logical_name=nn1
      {%- if hdfs.namenode_count > 1 %}
      webhdfs_url={{ protocol}}://{{ hdfs.namenode_hosts | first() }}:{{ hdfs_port}}/webhdfs/v1
      {%- endif %}
      {%- if hdfs.namenode_count == 1 %}
      webhdfs_url={{ protocol}}://{{ hdfs.namenode }}:{{ hdfs_port}}/webhdfs/v1
      {%- endif %}
      security_enabled={%- if hadoop.secure_mode -%}true{%- else -%}false{%- endif %}
      ssl_cert_ca_verify=True
      hadoop_conf_dir={{ hadoop.alt_config }}

  [[yarn_clusters]]
    {%- if yarn.resourcemanager_hosts %}
    {%- for rm in yarn.resourcemanager_hosts %}
    {{ '[[[default]]]' if not loop.last else '[[[ha]]]' }}
      ## resourcemanager_port=8032
      submit_to=True
      logical_name={{ loop.index }}
      {%- if hadoop.secure_mode %}
      security_enabled=True{%- else %}
      security_enabled=False{%- endif %}
      resourcemanager_api_url={{protocol}}://{{ rm}}:{{ yarn_port}}
      history_server_api_url=http://{{ rm }}:19888
      ## spark_history_server_url=http://localhost:18088
      ssl_cert_ca_verify=True
    {%- endfor %}
    {% endif %}


###########################################################################
# Settings to configure Beeswax with Hive
###########################################################################

[beeswax]

  # Host where HiveServer2 is running.
  # If Kerberos security is enabled, use fully-qualified domain name (FQDN).
  {%- set thrift_port = hive_cfg.get('hive.server2.thrift.http.port', {}) -%}
  {%- set thrift_path = hive_cfg.get('hive.server2.thrift.http.path', {}) -%}
  {%- set hive_target = 'G@role:hive and G@clustername:' + grains['cluster_id'] -%}
  {%- set hive_grains = salt['mine.get'](hive_target, 'grains.item','compound') -%}
  {%- if thrift_port and thrift_path and hive_grains and hive_grains.keys()|length > 0 %}
  hive_server_host={{ hive_grains.keys() | first()}}
  hive_server_port={{ thrift_port.value }}
  hive_conf_dir=/etc/hive/conf
  ## server_conn_timeout=120
  ## use_get_log_api=false
  ## list_partitions_limit=10000
  ## query_partitions_limit=10
  ## download_row_limit=100000
  ## download_bytes_limit=-1
  ## close_queries=false
  ## max_number_of_sessions=1
  ## thrift_version=7
  ## config_whitelist=hive.map.aggr,hive.exec.compress.output,hive.exec.parallel,hive.execution.engine,mapreduce.job.queuename
  ## auth_username=hue
  ## auth_password=
  [[ssl]]
    ## cacerts=/etc/hue/cacerts.pem
    ## validate=true
  {%- endif %}

###########################################################################
# Settings to configure Metastore
###########################################################################

[metastore]
  ## enable_new_create_table=true
  ## force_hs2_metadata=false

###########################################################################
# Settings to configure Impala
###########################################################################

[impala]


###########################################################################
# Settings to configure the Spark application.
###########################################################################

[spark]
  {%- if livy_grains.items()| length > 0 %}
  livy_server_url={{ protocol }}://{{livy_grains.keys() | first() }}:8998
  livy_server_session_kind=yarn
  {%- if hadoop.secure_mode %}
  security_enabled=true
  ssl_cert_ca_verify=true
  {%- else %}
  security_enabled=false
  ssl_cert_ca_verify=false
  {%- endif %}
  sql_server_host={{livy_grains.keys() | first() }}
  sql_server_port=10001


###########################################################################
# Settings to configure the Oozie app
###########################################################################

[oozie]
  ## local_data_dir=..../examples
  ## sample_data_dir=...thirdparty/sample_data
  ## remote_data_dir=/user/hue/oozie/workspaces
  ## oozie_jobs_count=100
  ## enable_cron_scheduling=true
  ## enable_document_action=true
  ## enable_oozie_backend_filtering=true
  ## enable_impala_action=false

###########################################################################
# Settings to configure the Filebrowser app
###########################################################################

[filebrowser]
  ## archive_upload_tempdir=/tmp
  ## show_download_button=false
  ## show_upload_button=false
  ## enable_extract_uploaded_archive=true

###########################################################################
# Settings to configure Pig
###########################################################################

[pig]
  ## local_sample_dir=/usr/share/hue/apps/pig/examples
  ## remote_data_dir=/user/hue/pig/examples

###########################################################################
# Settings to configure Sqoop2
###########################################################################

[sqoop]
  ## is_enabled=false
  ## server_url=http://localhost:12000/sqoop
  ## sqoop_conf_dir=/etc/sqoop2/conf
  ## ssl_cert_ca_verify=true

###########################################################################
# Settings to configure Proxy
###########################################################################

[proxy]
  ## whitelist=(localhost|127\.0\.0\.1):(50030|50070|50060|50075)
  ## blacklist=

###########################################################################
# Settings to configure HBase Browser
###########################################################################

[hbase]
  ## hbase_clusters=(Cluster|localhost:9090)
  ## hbase_conf_dir=/etc/hbase/conf
  ## truncate_limit = 500
  ## thrift_transport=framed
  ## ssl_cert_ca_verify=true

###########################################################################
# Settings to configure Solr Search
###########################################################################

[search]
  {%- if solr_grains.items()| length > 0 %}
  solr_url=http://{{ solr_grains.keys() | first()}}:8983/solr/
  {%- endif %}
  ## security_enabled=false
  ## empty_query=*:*

###########################################################################
# Settings to configure Solr API lib
###########################################################################

[libsolr]
  ## ssl_cert_ca_verify=true
  solr_zk_path=/


###########################################################################
# Settings to configure Solr Indexer
###########################################################################

[indexer]
  ## solrctl_path=/usr/bin/solrctl
  ## enable_scalable_indexer=false
  ## config_indexer_libs_path=/tmp/smart_indexer_lib
  ## enable_new_importer=false
  ## enable_sqoop=false
  ## enable_kafka=false


###########################################################################
# Settings to configure Job Designer
###########################################################################

[jobsub]
  ## local_data_dir=..../data
  ## sample_data_dir=...thirdparty/sample_data

###########################################################################
# Settings to configure Job Browser.
###########################################################################

[jobbrowser]
  share_jobs=true
  disable_killing_jobs=false
  enable_v2=true
  enable_query_browser=true
  ## log_offset=-1000000
  ## max_job_fetch=500

###########################################################################
# Settings to configure Sentry / Security App.
###########################################################################

[security]
  #only sentry
  hive_v1=false
  hive_v2=false
  solr_v2=false

###########################################################################
# Settings to configure the Zookeeper application.
###########################################################################

[zookeeper]
  [[clusters]]
    [[[default]]]
      host_ports={{ zk.connection_string}}
      ## rest_url=http://localhost:9998
      ## principal_name=zookeeper


###########################################################################
# Settings for the User Admin application
###########################################################################

[useradmin]
  ## home_dir_permissions=0755
  ## default_user_group=default

  [[password_policy]]
    is_enabled=false

###########################################################################
# Settings to configure liboozie
###########################################################################

[liboozie]
  ## oozie_url=http://localhost:11000/oozie
  ## security_enabled=false
  ## remote_deployement_dir=/user/hue/oozie/deployments

###########################################################################
# Settings for the Sentry lib
###########################################################################

[libsentry]
  ## hostname=localhost
  ## port=8038
  ## sentry_conf_dir=/etc/sentry/conf
  ## privilege_checker_caching=300


###########################################################################
# Settings to configure the ZooKeeper Lib
###########################################################################

[libzookeeper]
  ensemble={{ zk.connection_string }}
  ## principal_name=zookeeper


###########################################################################
# Settings for the RDBMS application
###########################################################################

[librdbms]
  [[databases]]
  
###########################################################################
# Settings to configure SAML
###########################################################################

[libsaml]
  ## xmlsec_binary=/usr/local/bin/xmlsec1
  ## entity_id="<base_url>/saml2/metadata/"
  ## create_users_on_login=true
  ## required_attributes=uid
  ## optional_attributes=
  ## metadata_file=
  ## key_file=
  ## cert_file=
  ## key_file_password=/path/key
  ## key_file_password_script=/path/pwd.sh
  ## user_attribute_mapping={'uid': ('username', )}
  ## authn_requests_signed=false
  ## logout_requests_signed=false
  ## username_source=attributes
  ## logout_enabled=true



###########################################################################
# Settings to configure Kafka
###########################################################################

[kafka]
  [[kafka]]
    ## is_enabled=false
    ## api_url=http://localhost:8082


###########################################################################
# Settings to configure Metadata
###########################################################################

[metadata]
